/**
 * HackatonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import { boolean, number, string } from '../schema';
import { BaseController } from './baseController';

export class MiscController extends BaseController {
  /**
   * @param vsCurrency
   * @param order
   * @param perPage
   * @param page
   * @param sparkline
   * @param accept
   * @return Response from the API call
   */
  async coinMarket(
    vsCurrency: string,
    order: string,
    perPage: number,
    page: number,
    sparkline: boolean,
    accept: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<void>> {
    const req = this.createRequest('GET', '/markets');
    const mapped = req.prepareArgs({
      vsCurrency: [vsCurrency, string()],
      order: [order, string()],
      perPage: [perPage, number()],
      page: [page, number()],
      sparkline: [sparkline, boolean()],
      accept: [accept, string()],
    });
    req.header('accept', mapped.accept);
    req.query('vs_currency', mapped.vsCurrency);
    req.query('order', mapped.order);
    req.query('per_page', mapped.perPage);
    req.query('page', mapped.page);
    req.query('sparkline', mapped.sparkline);
    return req.call(requestOptions);
  }
}
